plugins {
    id 'org.springframework.boot' version '2.4.5'
    id 'io.spring.dependency-management' version '1.0.14.RELEASE'
    id 'java'
    id 'groovy'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('codehausGroovyVersion', "3.0.8")
    set('restAssuredVersion', "4.4.0")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'com.opencsv:opencsv:5.7.0'
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.11'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.codehaus.groovy:groovy:3.0.6'
    testImplementation 'org.hamcrest:hamcrest:2.2'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testImplementation('org.spockframework:spock-core:2.0-groovy-3.0') {
        exclude group: 'org.codehaus.groovy'
    }
    testImplementation 'org.spockframework:spock-spring:2.0-groovy-3.0'
    testImplementation 'org.spockframework:spock-junit4:2.0-groovy-3.0'
    testImplementation "io.rest-assured:rest-assured:${restAssuredVersion}"
    testImplementation "io.rest-assured:json-path:${restAssuredVersion}"
    testImplementation "io.rest-assured:xml-path:${restAssuredVersion}"

    testImplementation("org.codehaus.groovy:groovy-xml:${codehausGroovyVersion}") {
        exclude group: 'org.codehaus.groovy'
    }
    testImplementation("org.codehaus.groovy:groovy-json:${codehausGroovyVersion}") {
        exclude group: 'org.codehaus.groovy'
    }
}

test {
    useJUnitPlatform()
    testLogging {
        exceptionFormat = 'full'
    }
}
